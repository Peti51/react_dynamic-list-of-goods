{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","className","style","color","name","id","API_URL","fetchData","a","fetch","response","json","data","get5First","items","filtered","sort","first","second","localeCompare","slice","getRedGoods","filter","element","App","useState","setData","setName","getData","value","fetchedData","useEffect","reRender","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,UAAU,YACVC,MAAO,CAAEC,MAAOH,EAAKG,OAJvB,SAMGH,EAAKI,MALDJ,EAAKK,UCTZC,EACJ,wEAEK,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAIEA,GAJF,4C,sBAOA,SAAeC,IAAtB,+B,4CAAO,8BAAAL,EAAA,sEACeD,IADf,cACCO,EADD,OAGCC,EAAWD,EAAME,MAAK,SAACC,EAAOC,GAClC,OAAOD,EAAMb,KAAKe,cAAcD,EAAOd,SAJpC,kBAOEW,EAASK,MAAM,EAAG,IAPpB,4C,sBAUA,SAAeC,IAAtB,+B,4CAAO,8BAAAb,EAAA,sEACeD,IADf,cACCO,EADD,OAGCC,EAAWD,EAAMQ,QAAO,SAACC,GAC7B,MAAyB,QAAlBA,EAAQpB,SAJZ,kBAOEY,GAPF,4C,sBChBA,IAAMS,EAAgB,WAC3B,MACGC,mBAA6D,IADhE,mBAAOb,EAAP,KAAac,EAAb,KAEA,EAAwBD,mBAAS,IAAjC,mBAAOrB,EAAP,KAAauB,EAAb,KAHiC,SAKlBC,EALkB,8EAKjC,WAAuBC,GAAvB,eAAArB,EAAA,2DAGUqB,EAHV,OAIS,cAJT,OAOS,WAPT,OAUS,YAVT,wCAK0BtB,IAL1B,cAKMuB,EALN,mDAQ0BjB,IAR1B,cAQMiB,EARN,qDAW0BT,IAX1B,eAWMS,EAXN,qDAe0BvB,IAf1B,QAeMuB,EAfN,eAkBEJ,EAAQI,GAlBV,6CALiC,sBA0BjCC,qBAAU,WAA0B,IAAzBF,EAAwB,uDAAhB,YACjBD,EAAQC,KACP,IAEH,IAAMG,EAAW,SAACH,GAChBD,EAAQC,IAGV,OACE,sBAAK5B,UAAU,MAAf,UACE,uDAEA,wBACEA,UAAoB,cAATG,EACP,2BACA,eACJ6B,KAAK,SACL,UAAQ,aACRC,QAAS,WACPF,EAAS,aACTL,EAAQ,cARZ,4BAcA,wBACE1B,UAAoB,WAATG,EACP,yBACA,cACJ6B,KAAK,SACL,UAAQ,oBACRC,QAAS,WACPF,EAAS,UACTL,EAAQ,WARZ,gCAcA,wBACE1B,UAAoB,YAATG,EACP,uBACA,aACJ6B,KAAK,SACL,UAAQ,aACRC,QAAS,WACPF,EAAS,WACTL,EAAQ,YARZ,4BAcA,cAAC,EAAD,CAAW7B,MAAOc,QCnFxBuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ce5ca9de.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className=\"Good-text\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\nconst API_URL\n= 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport async function fetchData(): Promise<Good[]> {\n  const response = await fetch(API_URL);\n  const data = await response.json();\n\n  return data;\n}\n\nexport async function get5First(): Promise<Good[]> {\n  const items = await fetchData();\n\n  const filtered = items.sort((first, second) => {\n    return first.name.localeCompare(second.name);\n  });\n\n  return filtered.slice(0, 5);\n}\n\nexport async function getRedGoods(): Promise<Good[]> {\n  const items = await fetchData();\n\n  const filtered = items.filter((element) => {\n    return element.color === 'red';\n  });\n\n  return filtered;\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { fetchData, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [data, setData]\n   = useState<Array<{ id: number, name: string, color: string }>>([]);\n  const [name, setName] = useState('');\n\n  async function getData(value: string) {\n    let fetchedData;\n\n    switch (value) {\n      case 'everyItem':\n        fetchedData = await fetchData();\n        break;\n      case 'first5':\n        fetchedData = await get5First();\n        break;\n      case 'onlyRed':\n        fetchedData = await getRedGoods();\n        break;\n\n      default:\n        fetchedData = await fetchData();\n    }\n\n    setData(fetchedData);\n  }\n\n  useEffect((value = 'everyItem') => {\n    getData(value);\n  }, []);\n\n  const reRender = (value: string) => {\n    getData(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        className={name === 'everyItem'\n          ? 'Button-green is-on-green'\n          : 'Button-green'}\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => {\n          reRender('everyItem');\n          setName('everyItem');\n        }}\n      >\n        Load all goods\n      </button>\n\n      <button\n        className={name === 'first5'\n          ? 'Button-blue is-on-blue'\n          : 'Button-blue'}\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => {\n          reRender('first5');\n          setName('first5');\n        }}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        className={name === 'onlyRed'\n          ? 'Button-red is-on-red'\n          : 'Button-red'}\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => {\n          reRender('onlyRed');\n          setName('onlyRed');\n        }}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={data} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}